Add:

  data_type:
    NUMBER: '(-)?(\d+(\.\d*)?)'

  conditionals:
    __postfix__: '(?:<(.*?)>)?'
    IF: '@(if)'
    ELIF: '@(elif)'
    ELSE: '@(else)'

  loops:
    __postfix__: '(?:<(.*?)>)?'
    WHILE: '@(while)'
    DO: '@(do)'
    FOR: '@(for)'
    REPEAT: '@(repeat)'
    LOOP: '@(loop)'
    FOREACH: '@(foreach)'

  subroutines:
    __postfix__: '(?:<(.*?)>)?'
    SUB: '@(sub)'
    RETURN: '@(return)'
    CALL: '@(call)'

  arithmetic:
    ADD: '\+'
    POW: '\*\*'
    MUL: '\*{1}'
    SUBTRACT: "-"
    DIV: '\/'
    MOD: "MOD"

  assignments:
    ASSIGNMENT: "="
    PLUS_ASSIGNMENT: '\+='
    POW_ASSIGNMENT: '\*\*='
    MUL_ASSIGNMENT: '\*{1}='
    MOINS_ASSIGNMENT: "-="
    DIV_ASSIGNMENT: '\/='
    MOD_ASSIGNMENT: "MOD="

  comparison:
    EQUAL: "(={2})|(==)"
    NOT_EQUAL: "!="
    GREATER: ">"
    LESSER: "<"
    GREATER_EQUAL: ">="
    LESSER_EQUAL: "<="

  BRACKET_OPEN: '\{'
  BRACKET_CLOSE: '\}'

  COMMAND: '(?:\((.*?)\))'

  variables:
    GCODE_LOCAL_VARIABLE: '(?:#<([a-zA-Z]+[a-zA-Z_\- 0-9]*)>)'
    GCODE_LOCAL_NUM_VARIABLE: '(?:#([1-30]+))'
    GCODE_GLOBAL_VARIABLE: '(?:#<(_[a-zA-Z_]+[a-zA-Z_\- ]*)>)'
    GCODE_GLOBAL_NUM_VARIABLE: '(?:#([31-5000]+))'
    GEM_LOCAL_VARIABLE: '(?:\$([a-zA-Z]+(-?[a-zA-Z_0-9])*))'
    GEM_GLOBAL_VARIABLE: '(?:\$(_[a-zA-Z_0-9]*))'

  GCODE: '[GMTOPXY]{1}'


Ignore:
  - '\s+'
  - ';.*?$'
